//
//  Copyright 2014  Matthew Ducker
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

namespace ObscurCore.Tests.Cryptography.Ciphers.Stream
{
	public class Hc256 : StreamCipherTestBase
	{
		private static readonly string DiscretePlaintext = "00000000000000000000000000000000" + 
		                                                   "00000000000000000000000000000000" + 
		                                                   "00000000000000000000000000000000" + 
		                                                   "00000000000000000000000000000000";

		public Hc256 () : base(ObscurCore.Cryptography.Ciphers.Stream.SymmetricStreamCipher.Hc256)
		{
			// Data from ESTREAM verified test vectors
			// http://www.ecrypt.eu.org/stream/svn/viewcvs.cgi/ecrypt/trunk/submissions/hc-256/verified.test-vectors?rev=149&view=markup

			DiscreteVectorTests.Add (new DiscreteVectorTestCase (
				"Set 2, vector# 0",
				"00000000000000000000000000000000",
				"00000000000000000000000000000000",
				DiscretePlaintext,
				"5B078985D8F6F30D42C5C02FA6B67951" +
				"53F06534801F89F24E74248B720B4818" +
				"CD9227ECEBCF4DBF8DBF6977E4AE14FA" +
				"E8504C7BC8A9F3EA6C0106F5327E6981"));

			DiscreteVectorTests.Add (new DiscreteVectorTestCase (
				"Set 2, vector# 9",
				"09090909090909090909090909090909",
				"00000000000000000000000000000000",
				DiscretePlaintext,
				"F5C2926651AEED9AF1A9C2F04C03D081" +
				"2145B56AEA46EB283A25A4C9E3D8BEB4" +
				"821B418F06F2B9DCDF1A85AB8C02CD14" +
				"62E1BBCAEC9AB0E99AA6AFF918BA627C"));

			DiscreteVectorTests.Add (new DiscreteVectorTestCase (
				"Set 2, vector# 135",
				"87878787878787878787878787878787",
				"00000000000000000000000000000000",
				DiscretePlaintext,
				"CEC0C3852E3B98233EBCB975C10B1191" +
				"3C69F2275EB97A1402EDF16C6FBE19BE" +
				"79D65360445BCB63676E6553B609A065" +
				"0155C3B22DD1975AC0F3F65063A2E16E"));

			DiscreteVectorTests.Add (new DiscreteVectorTestCase (
				"Set 6, vector# 1",
				"0558ABFE51A4F74A9DF04396E93C8FE2" +
				"3588DB2E81D4277ACD2073C6196CBF12",
				"167DE44BB21980E74EB51C83EA51B81F" +
				"86ED54BB2289F057BE258CF35AC1288F",
				DiscretePlaintext,
				"C44B5262F2EAD9C018213127686DB742" +
				"A72D3F2D61D18F0F4E7DE5B4F7ADABE0" +
				"7E0C82033B139F02BAACB4E2F2D0BE30" +
				"110C3A8A2B621523756692877C905DD0"));

			DiscreteVectorTests.Add (new DiscreteVectorTestCase (
				"Set 6, vector# 2",
				"0A5DB00356A9FC4FA2F5489BEE4194E7" +
				"3A8DE03386D92C7FD22578CB1E71C417",
				"1F86ED54BB2289F057BE258CF35AC128" +
				"8FF65DC42B92F960C72E95FC63CA3198",
				DiscretePlaintext,
				"9D13AA06122F4F03AE60D507701F1ED0" +
				"63D7530FF35EE76CAEDCBFB01D8A239E" +
				"FA4A44B272DE9B4092E2AD56E87C3A60" +
				"89F5A074D1F6E5B8FC6FABEE0C936F06"));

			DiscreteVectorTests.Add (new DiscreteVectorTestCase (
				"Set 6, vector# 3",
				"0F62B5085BAE0154A7FA4DA0F34699EC" +
				"3F92E5388BDE3184D72A7DD02376C91C",
				"288FF65DC42B92F960C72E95FC63CA31" +
				"98FF66CD349B0269D0379E056CD33AA1",
				DiscretePlaintext,
				"C8632038DA61679C4685288B37D3E232" +
				"7BC2D28C266B041FE0CA0D3CFEED8FD5" +
				"753259BAB757168F85EA96ADABD823CA" +
				"4684E918423E091565713FEDDE2CCFE0"));

			SegmentedVectorTests.Add (new SegmentedVectorTestCase (
				"[K128-IV128] Set 6, vector# 0",
				"0053A6F94C9FF24598EB3E91E4378ADD",
				"0D74DB42A91077DE45AC137AE148AF16",
				new TestVectorSegment[] {
					new TestVectorSegment (
						"stream[0..63]",
						0,
						"425A5E6F68EC055F38383ADC5CA9C048" +
						"D6455C56A5ACED215E22665185E497EB" +
						"3A2F5C0D45057169965EA37FE19F5D83" +
						"C95C4BEE11E8FA89545A38DD9D18AD6D"
					),
					new TestVectorSegment (
						"stream[65472..65535]",
						65472,
						"EFFA27F50B0B4C4AB3C7855CD5DD9EFD" +
						"B61783161678C9728B9032C2CB09A0B2" +
						"D2578C53BF3C3E67D382BC89D824D63B" +
						"20E62F414E4AC36472A16F4992DF4496"
					),
					new TestVectorSegment (
						"stream[65536..65599]",
						65536,
						"0111EEC218892B446FDFDBA9D0C734DF" +
						"C209D35FA86C1BEAC0D266E5DC4B3243" +
						"68B4263BA7A3517805D1501B36450FFA" +
						"1544812EBC0B9DDED93F5D45C4D83FFC"
					),
					new TestVectorSegment (
						"stream[131008..131071]",
						131008,
						"D966650E1A27DF3CB71B1E64CD3E7EEC" +
						"2D3EEEA2953E2FC5571B4380EA3BAEB5" +
						"3F014B4EE071A426E4A518E1AF335BD3" +
						"76309236760E0DF6184B3E34BF861458"
					)
				}
			));

			SegmentedVectorTests.Add (new SegmentedVectorTestCase (
				"[K128-IV256] Set 6, vector# 0",
				"0053A6F94C9FF24598EB3E91E4378ADD",
				"0D74DB42A91077DE45AC137AE148AF16" +
				"7DE44BB21980E74EB51C83EA51B81F86",
				new TestVectorSegment[] {
					new TestVectorSegment (
						"stream[0..63]",
						0,
						"914AEBA9E4BE90FD07AA58B6E2536B59" +
						"0DD63BA810A2B96BAD5DAC1818722BEC" +
						"61725C75B9E6194F57D3D2BBFE795E73" +
						"90405CA97249262093234239E35ED9E4"
					),
					new TestVectorSegment (
						"stream[65472..65535]",
						65472,
						"346C1A7D71DBB8FB69EA78F07D60A9A7" +
						"20D0ED544149AF102C12678D4AE0C5DF" +
						"E3521B7344F91977799085008EA00432" +
						"772C0B4ABEC1DB2C47608F9A29CC76EA"
					),
					new TestVectorSegment (
						"stream[65536..65599]",
						65536,
						"6F3B93E808687BE8E37A635E15B13052" +
						"60ED65488A59125D84726219AEE62087" +
						"47C6672C585759BA60BFD7F55AB975D4" +
						"B61596A506F8763F715F27A36082DB51"
					),
					new TestVectorSegment (
						"stream[131008..131071]",
						131008,
						"C64CAD1578C28BF19F11B14F3D33C681" +
						"A85D28A4B2D547652A7179C31127C306" +
						"DC04BE79BC1DA0279C69F9418311E57C" +
						"0F13D9E993008796EA10607A63BDC772"
					)
				}
			));

			SegmentedVectorTests.Add (new SegmentedVectorTestCase (
				"[K256-IV256] Set 6, vector# 0",
				"0053A6F94C9FF24598EB3E91E4378ADD" +
				"3083D6297CCF2275C81B6EC11467BA0D",
				"0D74DB42A91077DE45AC137AE148AF16" +
				"7DE44BB21980E74EB51C83EA51B81F86",
				new TestVectorSegment[] {
					new TestVectorSegment (
						"stream[0..63]",
						0,
						"23D9E70A45EB0127884D66D9F6F23C01" +
						"D1F88AFD629270127247256C1FFF91E9" +
						"1A797BD98ADD23AE15BEE6EEA3CEFDBF" +
						"A3ED6D22D9C4F459DB10C40CDF4F4DFF"
					),
					new TestVectorSegment (
						"stream[65472..65535]",
						65472,
						"CFF0058C45807C1F4300D118FDFC3B21" +
						"370936B39391791C92A821E1C8E8F248" +
						"BBBF378679468218FF5F6560B79A6015" +
						"82B81315DC19D8583263958B068BEA48"
					),
					new TestVectorSegment (
						"stream[65536..65599]",
						65536,
						"871A09D393D8888EBEA453F518BD300D" +
						"8233E906A31631D29A4A1834E268C3E4" +
						"F65F4F65B1B9E55606BDF28A571CA4E7" +
						"59BDE4718E1E13731663F5CAF1CB0F1E"
					),
					new TestVectorSegment (
						"stream[131008..131071]",
						131008,
						"15360407DA7B389DF28C08B2221F5E0D" +
						"96B34839325795A70A3F65D9CBB3848D" +
						"8C0793A53E8C4D71D8B53B2923A90B37" +
						"FE412A4485F0CC741E65743C6F1ECB4A"
					)
				}
			));
		}
	}
}

